load("@rules_python//python:defs.bzl", "py_binary")
load("@rules_rust//crate_universe:defs.bzl", "crate", "crates_vendor")

crates_vendor(
    name = "vendor_rust_deps",
    annotations = {
        "openssl-sys": [crate.annotation(
            build_script_data = [
                "@openssl//:openssl_lib",
                "@openssl//:openssl_include",
            ],
            build_script_data_glob = ["build/**/*.c"],
            build_script_env = {
                "OPENSSL_NO_VENDOR": "1",
                "OPENSSL_LIB_DIR": "$(execpath @openssl//:openssl_lib)",
                "OPENSSL_INCLUDE_DIR": "$(execpath @openssl//:openssl_include)",
            },
            compile_data = ["@openssl//:openssl_lib"],
            deps = ["@openssl"],
        )],
    },
    cargo_lockfile = ":Cargo.lock",
    generate_build_scripts = True,
    manifests = [
        ":Cargo.toml",
    ],
    mode = "remote",
    repository_name = "crates",
    supported_platform_triples = [
        "aarch64-apple-darwin",
        "aarch64-unknown-linux-gnu",
        "x86_64-apple-darwin",
        "x86_64-unknown-linux-gnu",
    ],
    tags = ["manual"],
    vendor_path = "crates",
)

py_binary(
    name = "patch_deps",
    srcs = ["patch_deps.py"],
    deps = [],
)
